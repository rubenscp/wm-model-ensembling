/home/lovelace/proj/proj939/rubenscp/CENAPAD/miniconda3/lib/python3.12/site-packages/albumentations/check_version.py:51: UserWarning: Error fetching version info <urlopen error [Errno 101] Network is unreachable>
  data = fetch_version_info()
/home/lovelace/proj/proj939/rubenscp/CENAPAD/miniconda3/lib/python3.12/site-packages/torchvision/models/_utils.py:135: UserWarning: Using 'weights' as positional parameter(s) is deprecated since 0.13 and may be removed in the future. Please use keyword parameter(s) instead.
  warnings.warn(
/home/lovelace/proj/proj939/rubenscp/CENAPAD/miniconda3/lib/python3.12/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=SSD300_VGG16_Weights.COCO_V1`. You can also use `weights=SSD300_VGG16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
/home/lovelace/proj/proj939/rubenscp/research/white-mold-applications/wm-model-ensembling/my-python-modules/common/metrics.py:106: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /opt/conda/conda-bld/pytorch_1716905971214/work/torch/csrc/utils/tensor_new.cpp:274.)
  "boxes": torch.tensor(predicted_boxes, dtype=torch.float),
/home/lovelace/proj/proj939/rubenscp/CENAPAD/miniconda3/lib/python3.12/site-packages/albumentations/core/composition.py:243: UserWarning: Got processor for bboxes, but no transform to process it.
  self._set_keys()
/home/lovelace/proj/proj939/rubenscp/CENAPAD/miniconda3/lib/python3.12/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/lovelace/proj/proj939/rubenscp/CENAPAD/miniconda3/lib/python3.12/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=FasterRCNN_ResNet50_FPN_Weights.COCO_V1`. You can also use `weights=FasterRCNN_ResNet50_FPN_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
/home/lovelace/proj/proj939/rubenscp/research/white-mold-applications/wm-model-ensembling/my-python-modules/model_yolo/inference.py:115: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  "labels": torch.tensor(box.cls, dtype=torch.int),
/home/lovelace/proj/proj939/rubenscp/research/white-mold-applications/wm-model-ensembling/my-python-modules/model_yolo/inference.py:115: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  "labels": torch.tensor(box.cls, dtype=torch.int),
/home/lovelace/proj/proj939/rubenscp/research/white-mold-applications/wm-model-ensembling/my-python-modules/model_yolo/inference.py:115: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  "labels": torch.tensor(box.cls, dtype=torch.int),
Some weights of the model checkpoint at /home/lovelace/proj/proj939/rubenscp/research/white-mold-applications/wm-pretrained-model/detr-resnet-50 were not used when initializing DetrForObjectDetection: ['model.backbone.conv_encoder.model.layer1.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer2.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer3.0.downsample.1.num_batches_tracked', 'model.backbone.conv_encoder.model.layer4.0.downsample.1.num_batches_tracked']
- This IS expected if you are initializing DetrForObjectDetection from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing DetrForObjectDetection from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of DetrForObjectDetection were not initialized from the model checkpoint at /home/lovelace/proj/proj939/rubenscp/research/white-mold-applications/wm-pretrained-model/detr-resnet-50 and are newly initialized because the shapes did not match:
- class_labels_classifier.bias: found shape torch.Size([92]) in the checkpoint and torch.Size([7]) in the model instantiated
- class_labels_classifier.weight: found shape torch.Size([92, 256]) in the checkpoint and torch.Size([7, 256]) in the model instantiated
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
The `max_size` parameter is deprecated and will be removed in v4.26. Please specify in `size['longest_edge'] instead`.
0it [00:00, ?it/s]1it [00:02,  2.10s/it]2it [00:02,  1.13s/it]3it [00:03,  1.21it/s]4it [00:03,  1.49it/s]5it [00:03,  1.68it/s]6it [00:04,  1.83it/s]7it [00:04,  1.94it/s]8it [00:05,  2.01it/s]9it [00:05,  2.04it/s]10it [00:06,  2.14it/s]11it [00:06,  2.18it/s]12it [00:07,  2.19it/s]13it [00:07,  2.20it/s]14it [00:07,  2.18it/s]15it [00:08,  2.16it/s]16it [00:08,  2.20it/s]17it [00:09,  2.22it/s]18it [00:09,  2.22it/s]19it [00:10,  2.16it/s]20it [00:10,  2.06it/s]21it [00:11,  2.08it/s]22it [00:11,  2.18it/s]23it [00:12,  2.19it/s]24it [00:12,  2.18it/s]25it [00:13,  1.80it/s]26it [00:31,  5.91s/it]27it [00:32,  4.26s/it]28it [00:32,  3.11s/it]29it [00:33,  2.30s/it]30it [00:33,  1.73s/it]31it [00:33,  1.34s/it]32it [00:34,  1.06s/it]33it [00:34,  1.15it/s]34it [00:35,  1.36it/s]35it [00:35,  1.56it/s]36it [00:35,  1.75it/s]37it [00:36,  1.91it/s]38it [00:36,  2.04it/s]39it [00:37,  2.13it/s]40it [00:37,  2.14it/s]41it [00:38,  2.09it/s]42it [00:38,  2.11it/s]43it [00:39,  2.11it/s]44it [00:39,  2.16it/s]45it [00:39,  2.20it/s]46it [00:40,  2.26it/s]47it [00:40,  2.31it/s]48it [00:41,  2.33it/s]49it [00:41,  2.33it/s]50it [00:42,  2.35it/s]51it [00:42,  2.36it/s]52it [00:42,  2.38it/s]53it [00:43,  2.36it/s]54it [00:43,  2.34it/s]55it [00:44,  2.34it/s]56it [00:51,  2.42s/it]57it [00:51,  1.82s/it]58it [00:52,  1.40s/it]59it [01:08,  5.86s/it]60it [01:08,  4.23s/it]61it [01:09,  3.08s/it]62it [01:28,  7.92s/it]63it [02:01, 15.56s/it]64it [02:27, 18.73s/it]65it [02:28, 13.24s/it]66it [02:28,  9.39s/it]67it [02:29,  6.70s/it]68it [02:29,  4.81s/it]69it [02:29,  3.49s/it]70it [02:30,  2.65s/it]71it [02:31,  1.98s/it]72it [02:31,  1.53s/it]73it [02:32,  1.21s/it]74it [02:32,  1.03it/s]75it [02:32,  1.23it/s]76it [02:33,  1.41it/s]77it [02:33,  1.57it/s]78it [02:34,  1.68it/s]79it [02:34,  1.79it/s]80it [02:35,  1.93it/s]81it [02:35,  2.05it/s]82it [02:36,  2.14it/s]83it [02:36,  2.21it/s]84it [02:36,  2.28it/s]85it [02:37,  2.32it/s]86it [02:37,  2.32it/s]87it [02:38,  2.35it/s]88it [02:38,  2.31it/s]89it [02:38,  2.34it/s]90it [02:39,  2.37it/s]91it [02:39,  2.38it/s]92it [02:40,  2.37it/s]93it [02:40,  2.32it/s]94it [02:41,  2.29it/s]95it [02:41,  2.27it/s]96it [02:42,  2.22it/s]97it [02:42,  2.21it/s]98it [02:42,  2.26it/s]99it [02:43,  2.31it/s]100it [03:01,  5.68s/it]101it [03:01,  4.10s/it]102it [03:12,  6.24s/it]103it [03:26,  8.44s/it]104it [03:26,  6.03s/it]105it [03:27,  4.35s/it]106it [03:27,  3.17s/it]107it [03:28,  2.34s/it]108it [03:33,  3.10s/it]109it [03:33,  2.30s/it]110it [03:41,  3.93s/it]111it [03:41,  2.88s/it]112it [03:42,  2.14s/it]113it [03:42,  1.62s/it]114it [03:42,  1.26s/it]115it [03:43,  1.01s/it]116it [03:43,  1.20it/s]117it [03:44,  1.40it/s]118it [03:44,  1.60it/s]119it [03:45,  1.75it/s]120it [03:45,  1.91it/s]121it [03:45,  1.94it/s]122it [03:46,  2.06it/s]123it [03:46,  2.16it/s]124it [03:47,  1.95it/s]125it [03:50,  1.16s/it]126it [03:50,  1.05it/s]127it [03:54,  1.83s/it]128it [03:54,  1.40s/it]129it [03:55,  1.11s/it]130it [03:55,  1.11it/s]131it [03:56,  1.33it/s]132it [03:56,  1.53it/s]133it [03:56,  1.72it/s]134it [03:59,  1.16s/it]135it [03:59,  1.06it/s]136it [04:00,  1.28it/s]137it [04:00,  1.48it/s]138it [04:01,  1.67it/s]139it [04:01,  1.84it/s]140it [04:01,  1.98it/s]141it [04:02,  2.09it/s]142it [04:04,  1.05it/s]143it [04:23,  6.50s/it]144it [04:24,  4.68s/it]145it [04:24,  3.40s/it]146it [04:30,  3.98s/it]147it [04:30,  2.91s/it]148it [04:30,  2.16s/it]149it [04:31,  1.64s/it]150it [04:31,  1.27s/it]151it [04:32,  1.01s/it]152it [04:32,  1.20it/s]153it [04:32,  1.41it/s]154it [04:45,  4.21s/it]155it [04:45,  3.07s/it]156it [04:46,  2.28s/it]157it [04:46,  1.73s/it]158it [04:47,  1.34s/it]159it [04:47,  1.06s/it]160it [04:47,  1.15it/s]161it [04:48,  1.37it/s]162it [04:48,  1.57it/s]163it [04:49,  1.75it/s]164it [04:49,  1.91it/s]165it [05:10,  6.57s/it]166it [05:10,  4.73s/it]167it [05:11,  3.44s/it]168it [05:11,  2.54s/it]169it [05:11,  1.92s/it]170it [05:12,  1.48s/it]171it [05:12,  1.18s/it]172it [05:13,  1.04it/s]173it [05:40,  8.74s/it]174it [05:40,  6.26s/it]175it [05:41,  4.53s/it]176it [05:41,  3.30s/it]177it [05:42,  2.54s/it]178it [05:42,  1.91s/it]179it [05:43,  1.48s/it]180it [05:43,  1.17s/it]181it [05:44,  1.04it/s]182it [05:44,  1.23it/s]183it [05:45,  1.43it/s]184it [05:45,  1.64it/s]185it [05:45,  1.81it/s]186it [05:46,  1.96it/s]187it [05:46,  2.08it/s]188it [05:47,  2.17it/s]189it [05:47,  2.24it/s]190it [05:48,  2.29it/s]191it [05:48,  2.31it/s]192it [05:48,  2.34it/s]193it [05:51,  1.06it/s]194it [05:51,  1.25it/s]195it [05:51,  1.42it/s]196it [06:14,  7.12s/it]197it [06:38, 12.32s/it]198it [07:32, 24.80s/it]199it [07:33, 17.65s/it]200it [07:52, 18.08s/it]201it [07:52, 12.79s/it]202it [07:53,  9.07s/it]203it [07:53,  6.48s/it]204it [07:54,  4.66s/it]205it [07:54,  3.39s/it]206it [07:55,  2.50s/it]207it [07:55,  1.89s/it]208it [07:55,  1.45s/it]209it [07:56,  1.14s/it]210it [07:56,  1.08it/s]211it [07:57,  1.29it/s]212it [07:57,  1.50it/s]213it [07:58,  1.68it/s]214it [07:58,  1.85it/s]215it [07:58,  2.00it/s]216it [07:59,  2.11it/s]217it [07:59,  2.19it/s]218it [08:00,  2.26it/s]219it [08:00,  2.30it/s]220it [08:00,  2.34it/s]221it [08:01,  2.36it/s]222it [08:01,  2.38it/s]223it [08:02,  2.39it/s]224it [08:02,  2.38it/s]225it [08:02,  2.37it/s]226it [08:09,  2.26s/it]227it [08:16,  3.58s/it]228it [08:16,  2.63s/it]229it [08:17,  1.97s/it]230it [08:17,  1.50s/it]231it [08:17,  1.19s/it]232it [08:45,  9.22s/it]233it [09:24, 18.15s/it]234it [09:30, 14.48s/it]235it [09:31, 10.27s/it]236it [09:36,  8.63s/it]237it [09:39,  7.19s/it]238it [09:40,  5.15s/it]239it [09:40,  3.73s/it]240it [09:42,  3.08s/it]241it [10:03,  8.42s/it]242it [10:22, 11.74s/it]243it [10:23,  8.34s/it]244it [10:23,  5.98s/it]245it [10:23,  4.32s/it]246it [10:24,  3.16s/it]247it [10:24,  2.35s/it]248it [10:25,  1.78s/it]249it [10:25,  1.38s/it]250it [10:26,  1.10s/it]251it [10:26,  1.10it/s]252it [10:27,  1.29it/s]253it [10:27,  1.47it/s]254it [10:27,  1.66it/s]255it [10:28,  1.81it/s]256it [10:28,  1.91it/s]257it [10:29,  1.99it/s]258it [10:29,  2.03it/s]259it [10:30,  2.06it/s]260it [10:30,  2.14it/s]261it [10:31,  2.19it/s]262it [10:31,  2.19it/s]263it [10:32,  2.20it/s]264it [10:32,  2.19it/s]265it [10:52,  6.46s/it]266it [10:53,  4.65s/it]267it [10:53,  3.39s/it]268it [10:54,  2.51s/it]269it [10:54,  1.90s/it]270it [10:55,  1.47s/it]271it [10:55,  1.16s/it]272it [10:56,  1.07it/s]273it [10:56,  1.29it/s]274it [10:56,  1.50it/s]275it [10:57,  1.69it/s]276it [10:57,  1.85it/s]277it [10:58,  1.99it/s]278it [10:58,  2.10it/s]279it [10:58,  2.18it/s]280it [10:59,  2.25it/s]281it [10:59,  2.30it/s]282it [11:00,  2.34it/s]283it [11:00,  2.36it/s]284it [11:01,  2.36it/s]285it [11:01,  2.30it/s]286it [11:01,  2.28it/s]287it [11:02,  2.25it/s]288it [11:06,  1.54s/it]289it [11:16,  4.19s/it]290it [11:17,  3.06s/it]291it [11:17,  2.26s/it]292it [11:18,  1.71s/it]293it [11:18,  1.33s/it]294it [11:18,  1.06s/it]295it [11:19,  1.15it/s]296it [11:19,  1.36it/s]297it [11:20,  1.57it/s]298it [11:20,  1.75it/s]299it [11:21,  1.91it/s]300it [11:21,  2.04it/s]301it [11:21,  2.14it/s]302it [11:22,  2.22it/s]303it [11:22,  2.28it/s]304it [11:23,  2.32it/s]305it [11:23,  2.35it/s]306it [11:23,  2.37it/s]307it [11:24,  2.34it/s]308it [11:24,  2.23it/s]309it [11:25,  2.23it/s]310it [11:25,  2.28it/s]311it [11:26,  2.33it/s]312it [11:26,  2.36it/s]313it [11:27,  2.37it/s]314it [11:27,  2.37it/s]315it [11:27,  2.33it/s]316it [11:28,  2.30it/s]317it [11:28,  2.32it/s]318it [11:29,  2.35it/s]319it [11:29,  2.34it/s]320it [11:30,  2.36it/s]321it [11:32,  1.04it/s]322it [11:32,  1.25it/s]323it [11:33,  1.46it/s]323it [11:33,  2.15s/it]
